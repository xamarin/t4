trigger:
- v2.2.1-vsmac

pr:
- v2.2.1-vsmac

pool:
  vmImage: 'macos-latest'

variables:
- name: Codeql.Enabled
  value: true
- name: Codeql.TSAEnabled
  value: true
- name: Packaging.EnableSBOMSigning
  value: true
- name: BUILDSECMON_OPT_IN
  value: true

steps:

# Manually added because it will not auto-inject for some reason
- task: CodeQL3000Init@0
  condition: eq(variables['Build.SourceBranchName'], 'v2.2.1-vsmac')

- task: DotNetCoreCLI@2
  displayName: Build and Package
  inputs:
    command: build
    arguments: '-c Release'

# Manually added because it will not auto-inject for some reason
- task: CodeQL3000Finalize@0
  condition: eq(variables['Build.SourceBranchName'], 'v2.2.1-vsmac')

- task: DotNetCoreCLI@2
  displayName: Push
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'v2.2.1-vsmac'))
  inputs:
    command: push
    searchPatternPush: 'packages/Release/**.nupkg'
    feedPublish: 'Xamarin'

- task: Bash@3
  displayName: 'Copy files for SBOM'
  inputs:
    targetType: 'inline'
    script: |
      mkdir -p sbom/Mono.TextTemplating
      mkdir -p sbom/Mono.TextTemplating.Roslyn
      mkdir -p sbom/dotnet-t4
      mkdir -p sbom/TextTransform

      cp -R Mono.TextTemplating/bin/Release sbom/Mono.TextTemplating
      cp -R Mono.TextTemplating.Roslyn/bin/Release sbom/Mono.TextTemplating.Roslyn
      cp -R dotnet-t4/bin/Release sbom/dotnet-t4
      cp -R TextTransform/bin/Release sbom/TextTransform
    workingDirectory: '$(Build.SourcesDirectory)'

- task: ManifestGeneratorTask@0
  inputs:
    PackageName: 'xamarin-t4'
    BuildDropPath: '$(Build.SourcesDirectory)/sbom'
    ManifestDirPath: '$(Build.SourcesDirectory)'
    BuildComponentPath: '$(Build.SourcesDirectory)'
    AdditionalComponentDetectorArgs: '--DirectoryExclusionList **/Tests/**;**/packages/**'
  displayName: 'Generating SBOM'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.SourcesDirectory)/_manifest'
    artifactName: SBOM
  displayName: Publish SBOM
